name: CI/CD Pipeline for Book Hive App

on:
  push: 
    branches:
      - master
    
  pull_request:
    branches:
      - master


jobs:
  build-deploy:
    name: Build and Deploy Book Hive Web App
    runs-on: ubuntu-latest

    steps:
      # 1. Checking out the code - Github actions will copy the code from the Github repo and clone it into the runner.
      - name: Checkout Code
        uses: actions/checkout@v4 # actions that want to be run

      # 2. Setup environment in the runner machine
      - name: Setup Node.js Environment
        uses: actions/setup-node@v4
        with:
          node-version: '20.11.1'

      # 3. Install dependencies for all components
      - name: Install dependencies for backend
        working-directory: ./book-hive-backend
        run: npm install

      - name: Install dependencies for frontend
        working-directory: ./book-hive-frontend
        run: npm install

      - name: Install dependencies for discordbot
        working-directory: ./discord-bot
        run: npm install

      # 4. Run the Tests
      # - name: Run Tests
      #  run: npm test # Specify test scripts here

      # 5. Build and Package the application
      # - name: Build and Package the backend
      #   working-directory: ./book-hive-backend
      #   run: npm run build

      # - name: Build and Package the frontend
      #   working-directory: ./book-hive-frontend
      #   run:  npm start &

      # - name: Run the Discord Bot
      #   working-directory: ./discord-bot
      #   run: node bot.js &

      # 6. Print Success Message
      - name: Mark Success
        run: echo "Build and Package executed successfully!"

      # 7. Set up QEMU - this action can be useful if you want to add emulation support with QEMU to be able to build against more platforms.
      # - name: Set up QEMU
      #   uses: docker/setup-qemu-action@v3

      # # 8. Set up docker Buildx - this action will create and boot a builder using by default the docker-container driver. 
      # # This is not required but recommended using it to be able to build multi-platform images, export cache, etc.
      # - name: Set up Docker Buildx
      #   uses: docker/setup-buildx-action@v3

      # # 9. Login to Docker Hub
      # - name: Login to Docker Hub
      #   uses: docker/login-action@v3
      #   with:
      #     username: ${{ secrets.DOCKER_HUB_USERNAME }}
      #     password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      # # 10. Build & push the docker image
      # - name: Build & Push Docker Image
      #   uses: docker/build-push-action@v6
      #   with:
      #     context: .
      #     dockerfile: Dockerfile
      #     push: false
      #     tags: ${{ secrets.DOCKER_HUB_USERNAME }}/Book-Hive:$(date-'%Y-%m-%d%H-%M-%S') # tags: ghcr.io/your-username/your-repo-name:latest
          
